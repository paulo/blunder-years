Terminais não utilizados na gramática

   TRUE
   FALSE
   END
   nomefuncao


Estado 134 conflictos: 1 shift/reduce


Gramática

    0 $accept: Prog $end

    1 $@1: %empty

    2 $@2: %empty

    3 $@3: %empty

    4 Prog: $@1 ListaDecla $@2 ListaFun $@3 ListInst

    5 ListaFun: ListaFun Funcao
    6         | %empty

    7 ListaDecla: ListaDecla Decla
    8           | %empty

    9 ListInst: ListInst Inst
   10         | Inst

   11 $@4: %empty

   12 $@5: %empty

   13 Funcao: '#' Tipo var $@4 '(' ListaArg ')' $@5 '{' ListaDecla ListInst '}'

   14 ListaArg: %empty
   15         | ListaArg2

   16 ListaArg2: Tipo var
   17          | ListaArg2 ',' Tipo var

   18 Decla: INT var ';'
   19      | INT var '[' num ']' ';'

   20 Tipo: VOID
   21     | INT

   22 ConjInst: %empty
   23         | '{' ListInst '}'

   24 Inst: If
   25     | While
   26     | DoWhile
   27     | For
   28     | Atrib ';'
   29     | Printi ';'
   30     | Scani ';'
   31     | RETURN Exp ';'
   32     | ELSE

   33 VarAtr: var

   34 Atrib: VarAtr '=' Exp
   35      | VarAtr '+' '+'

   36 $@6: %empty

   37 Atrib: VarAtr $@6 '[' Exp ']' '=' Exp

   38 Printi: PRINTI '(' Exp ')'

   39 Scani: SCANI '(' VarAtr ')'

   40 $@7: %empty

   41 $@8: %empty

   42 $@9: %empty

   43 If: IF $@7 TestExpL $@8 ConjInst $@9 Else

   44 Else: %empty
   45     | ELSE ConjInst

   46 $@10: %empty

   47 $@11: %empty

   48 While: WHILE $@10 TestExpL $@11 ConjInst

   49 $@12: %empty

   50 DoWhile: DO $@12 ConjInst WHILE TestExpL

   51 For: FOR ForHeader ConjInst

   52 $@13: %empty

   53 $@14: %empty

   54 ForHeader: '(' ForAtrib ';' $@13 ExpL ';' $@14 ForAtrib ')'

   55 ForAtrib: Atrib
   56         | %empty

   57 Exp: Exp '+' Exp
   58    | Exp '-' Exp
   59    | Exp '%' Exp
   60    | Exp '*' Exp
   61    | Exp '/' Exp
   62    | '(' Exp ')'
   63    | num
   64    | VarAtr

   65 $@15: %empty

   66 Exp: VarAtr $@15 '[' Exp ']'

   67 $@16: %empty

   68 Exp: var $@16 '(' FunArgs ')'

   69 FunArgs: %empty
   70        | FunArgs2

   71 FunArgs2: Exp
   72         | FunArgs2 ',' Exp

   73 TestExpL: '(' ExpL ')'

   74 ExpL: Exp '=' '=' Exp
   75     | Exp '!' '=' Exp
   76     | Exp '>' '=' Exp
   77     | Exp '<' '=' Exp
   78     | Exp '<' Exp
   79     | Exp '>' Exp

   80 $@17: %empty

   81 ExpL: '(' ExpL ')' $@17 '&' '&' '(' ExpL ')'
   82     | '(' ExpL ')' '|' '|' '(' ExpL ')'


Terminais, com as regras aonde aparecem

$end (0) 0
'!' (33) 75
'#' (35) 13
'%' (37) 59
'&' (38) 81
'(' (40) 13 38 39 54 62 68 73 81 82
')' (41) 13 38 39 54 62 68 73 81 82
'*' (42) 60
'+' (43) 35 57
',' (44) 17 72
'-' (45) 58
'/' (47) 61
';' (59) 18 19 28 29 30 31 54
'<' (60) 77 78
'=' (61) 34 37 74 75 76 77
'>' (62) 76 79
'[' (91) 19 37 66
']' (93) 19 37 66
'{' (123) 13 23
'|' (124) 82
'}' (125) 13 23
error (256)
INT (258) 18 19 21
WHILE (259) 48 50
FOR (260) 51
IF (261) 43
ELSE (262) 32 45
RETURN (263) 31
VOID (264) 20
PRINTI (265) 38
SCANI (266) 39
TRUE (267)
FALSE (268)
DO (269) 50
END (270)
var (271) 13 16 17 18 19 33 68
nomefuncao (272)
num (273) 19 63


Não-terminais, com as regras aonde aparecem

$accept (39)
    à esquerda: 0
Prog (40)
    à esquerda: 4, à direita: 0
$@1 (41)
    à esquerda: 1, à direita: 4
$@2 (42)
    à esquerda: 2, à direita: 4
$@3 (43)
    à esquerda: 3, à direita: 4
ListaFun (44)
    à esquerda: 5 6, à direita: 4 5
ListaDecla (45)
    à esquerda: 7 8, à direita: 4 7 13
ListInst (46)
    à esquerda: 9 10, à direita: 4 9 13 23
Funcao (47)
    à esquerda: 13, à direita: 5
$@4 (48)
    à esquerda: 11, à direita: 13
$@5 (49)
    à esquerda: 12, à direita: 13
ListaArg (50)
    à esquerda: 14 15, à direita: 13
ListaArg2 (51)
    à esquerda: 16 17, à direita: 15 17
Decla (52)
    à esquerda: 18 19, à direita: 7
Tipo (53)
    à esquerda: 20 21, à direita: 13 16 17
ConjInst (54)
    à esquerda: 22 23, à direita: 43 45 48 50 51
Inst (55)
    à esquerda: 24 25 26 27 28 29 30 31 32, à direita: 9 10
VarAtr (56)
    à esquerda: 33, à direita: 34 35 37 39 64 66
Atrib (57)
    à esquerda: 34 35 37, à direita: 28 55
$@6 (58)
    à esquerda: 36, à direita: 37
Printi (59)
    à esquerda: 38, à direita: 29
Scani (60)
    à esquerda: 39, à direita: 30
If (61)
    à esquerda: 43, à direita: 24
$@7 (62)
    à esquerda: 40, à direita: 43
$@8 (63)
    à esquerda: 41, à direita: 43
$@9 (64)
    à esquerda: 42, à direita: 43
Else (65)
    à esquerda: 44 45, à direita: 43
While (66)
    à esquerda: 48, à direita: 25
$@10 (67)
    à esquerda: 46, à direita: 48
$@11 (68)
    à esquerda: 47, à direita: 48
DoWhile (69)
    à esquerda: 50, à direita: 26
$@12 (70)
    à esquerda: 49, à direita: 50
For (71)
    à esquerda: 51, à direita: 27
ForHeader (72)
    à esquerda: 54, à direita: 51
$@13 (73)
    à esquerda: 52, à direita: 54
$@14 (74)
    à esquerda: 53, à direita: 54
ForAtrib (75)
    à esquerda: 55 56, à direita: 54
Exp (76)
    à esquerda: 57 58 59 60 61 62 63 64 66 68, à direita: 31 34 37
    38 57 58 59 60 61 62 66 71 72 74 75 76 77 78 79
$@15 (77)
    à esquerda: 65, à direita: 66
$@16 (78)
    à esquerda: 67, à direita: 68
FunArgs (79)
    à esquerda: 69 70, à direita: 68
FunArgs2 (80)
    à esquerda: 71 72, à direita: 70 72
TestExpL (81)
    à esquerda: 73, à direita: 43 48 50
ExpL (82)
    à esquerda: 74 75 76 77 78 79 81 82, à direita: 54 73 81 82
$@17 (83)
    à esquerda: 80, à direita: 81


State 0

    0 $accept: . Prog $end

    $default  reduzir usando a regra 1 ($@1)

    Prog  ir para o estado 1
    $@1   ir para o estado 2


State 1

    0 $accept: Prog . $end

    $end  fazer shift, e ir para o estado 3


State 2

    4 Prog: $@1 . ListaDecla $@2 ListaFun $@3 ListInst

    $default  reduzir usando a regra 8 (ListaDecla)

    ListaDecla  ir para o estado 4


State 3

    0 $accept: Prog $end .

    $default  aceite


State 4

    4 Prog: $@1 ListaDecla . $@2 ListaFun $@3 ListInst
    7 ListaDecla: ListaDecla . Decla

    INT  fazer shift, e ir para o estado 5

    $default  reduzir usando a regra 2 ($@2)

    $@2    ir para o estado 6
    Decla  ir para o estado 7


State 5

   18 Decla: INT . var ';'
   19      | INT . var '[' num ']' ';'

    var  fazer shift, e ir para o estado 8


State 6

    4 Prog: $@1 ListaDecla $@2 . ListaFun $@3 ListInst

    $default  reduzir usando a regra 6 (ListaFun)

    ListaFun  ir para o estado 9


State 7

    7 ListaDecla: ListaDecla Decla .

    $default  reduzir usando a regra 7 (ListaDecla)


State 8

   18 Decla: INT var . ';'
   19      | INT var . '[' num ']' ';'

    ';'  fazer shift, e ir para o estado 10
    '['  fazer shift, e ir para o estado 11


State 9

    4 Prog: $@1 ListaDecla $@2 ListaFun . $@3 ListInst
    5 ListaFun: ListaFun . Funcao

    '#'  fazer shift, e ir para o estado 12

    $default  reduzir usando a regra 3 ($@3)

    $@3     ir para o estado 13
    Funcao  ir para o estado 14


State 10

   18 Decla: INT var ';' .

    $default  reduzir usando a regra 18 (Decla)


State 11

   19 Decla: INT var '[' . num ']' ';'

    num  fazer shift, e ir para o estado 15


State 12

   13 Funcao: '#' . Tipo var $@4 '(' ListaArg ')' $@5 '{' ListaDecla ListInst '}'

    INT   fazer shift, e ir para o estado 16
    VOID  fazer shift, e ir para o estado 17

    Tipo  ir para o estado 18


State 13

    4 Prog: $@1 ListaDecla $@2 ListaFun $@3 . ListInst

    WHILE   fazer shift, e ir para o estado 19
    FOR     fazer shift, e ir para o estado 20
    IF      fazer shift, e ir para o estado 21
    ELSE    fazer shift, e ir para o estado 22
    RETURN  fazer shift, e ir para o estado 23
    PRINTI  fazer shift, e ir para o estado 24
    SCANI   fazer shift, e ir para o estado 25
    DO      fazer shift, e ir para o estado 26
    var     fazer shift, e ir para o estado 27

    ListInst  ir para o estado 28
    Inst      ir para o estado 29
    VarAtr    ir para o estado 30
    Atrib     ir para o estado 31
    Printi    ir para o estado 32
    Scani     ir para o estado 33
    If        ir para o estado 34
    While     ir para o estado 35
    DoWhile   ir para o estado 36
    For       ir para o estado 37


State 14

    5 ListaFun: ListaFun Funcao .

    $default  reduzir usando a regra 5 (ListaFun)


State 15

   19 Decla: INT var '[' num . ']' ';'

    ']'  fazer shift, e ir para o estado 38


State 16

   21 Tipo: INT .

    $default  reduzir usando a regra 21 (Tipo)


State 17

   20 Tipo: VOID .

    $default  reduzir usando a regra 20 (Tipo)


State 18

   13 Funcao: '#' Tipo . var $@4 '(' ListaArg ')' $@5 '{' ListaDecla ListInst '}'

    var  fazer shift, e ir para o estado 39


State 19

   48 While: WHILE . $@10 TestExpL $@11 ConjInst

    $default  reduzir usando a regra 46 ($@10)

    $@10  ir para o estado 40


State 20

   51 For: FOR . ForHeader ConjInst

    '('  fazer shift, e ir para o estado 41

    ForHeader  ir para o estado 42


State 21

   43 If: IF . $@7 TestExpL $@8 ConjInst $@9 Else

    $default  reduzir usando a regra 40 ($@7)

    $@7  ir para o estado 43


State 22

   32 Inst: ELSE .

    $default  reduzir usando a regra 32 (Inst)


State 23

   31 Inst: RETURN . Exp ';'

    var  fazer shift, e ir para o estado 44
    num  fazer shift, e ir para o estado 45
    '('  fazer shift, e ir para o estado 46

    VarAtr  ir para o estado 47
    Exp     ir para o estado 48


State 24

   38 Printi: PRINTI . '(' Exp ')'

    '('  fazer shift, e ir para o estado 49


State 25

   39 Scani: SCANI . '(' VarAtr ')'

    '('  fazer shift, e ir para o estado 50


State 26

   50 DoWhile: DO . $@12 ConjInst WHILE TestExpL

    $default  reduzir usando a regra 49 ($@12)

    $@12  ir para o estado 51


State 27

   33 VarAtr: var .

    $default  reduzir usando a regra 33 (VarAtr)


State 28

    4 Prog: $@1 ListaDecla $@2 ListaFun $@3 ListInst .
    9 ListInst: ListInst . Inst

    WHILE   fazer shift, e ir para o estado 19
    FOR     fazer shift, e ir para o estado 20
    IF      fazer shift, e ir para o estado 21
    ELSE    fazer shift, e ir para o estado 22
    RETURN  fazer shift, e ir para o estado 23
    PRINTI  fazer shift, e ir para o estado 24
    SCANI   fazer shift, e ir para o estado 25
    DO      fazer shift, e ir para o estado 26
    var     fazer shift, e ir para o estado 27

    $default  reduzir usando a regra 4 (Prog)

    Inst     ir para o estado 52
    VarAtr   ir para o estado 30
    Atrib    ir para o estado 31
    Printi   ir para o estado 32
    Scani    ir para o estado 33
    If       ir para o estado 34
    While    ir para o estado 35
    DoWhile  ir para o estado 36
    For      ir para o estado 37


State 29

   10 ListInst: Inst .

    $default  reduzir usando a regra 10 (ListInst)


State 30

   34 Atrib: VarAtr . '=' Exp
   35      | VarAtr . '+' '+'
   37      | VarAtr . $@6 '[' Exp ']' '=' Exp

    '+'  fazer shift, e ir para o estado 53
    '='  fazer shift, e ir para o estado 54

    $default  reduzir usando a regra 36 ($@6)

    $@6  ir para o estado 55


State 31

   28 Inst: Atrib . ';'

    ';'  fazer shift, e ir para o estado 56


State 32

   29 Inst: Printi . ';'

    ';'  fazer shift, e ir para o estado 57


State 33

   30 Inst: Scani . ';'

    ';'  fazer shift, e ir para o estado 58


State 34

   24 Inst: If .

    $default  reduzir usando a regra 24 (Inst)


State 35

   25 Inst: While .

    $default  reduzir usando a regra 25 (Inst)


State 36

   26 Inst: DoWhile .

    $default  reduzir usando a regra 26 (Inst)


State 37

   27 Inst: For .

    $default  reduzir usando a regra 27 (Inst)


State 38

   19 Decla: INT var '[' num ']' . ';'

    ';'  fazer shift, e ir para o estado 59


State 39

   13 Funcao: '#' Tipo var . $@4 '(' ListaArg ')' $@5 '{' ListaDecla ListInst '}'

    $default  reduzir usando a regra 11 ($@4)

    $@4  ir para o estado 60


State 40

   48 While: WHILE $@10 . TestExpL $@11 ConjInst

    '('  fazer shift, e ir para o estado 61

    TestExpL  ir para o estado 62


State 41

   54 ForHeader: '(' . ForAtrib ';' $@13 ExpL ';' $@14 ForAtrib ')'

    var  fazer shift, e ir para o estado 27

    $default  reduzir usando a regra 56 (ForAtrib)

    VarAtr    ir para o estado 30
    Atrib     ir para o estado 63
    ForAtrib  ir para o estado 64


State 42

   51 For: FOR ForHeader . ConjInst

    '{'  fazer shift, e ir para o estado 65

    $default  reduzir usando a regra 22 (ConjInst)

    ConjInst  ir para o estado 66


State 43

   43 If: IF $@7 . TestExpL $@8 ConjInst $@9 Else

    '('  fazer shift, e ir para o estado 61

    TestExpL  ir para o estado 67


State 44

   33 VarAtr: var .
   68 Exp: var . $@16 '(' FunArgs ')'

    '('       reduzir usando a regra 67 ($@16)
    $default  reduzir usando a regra 33 (VarAtr)

    $@16  ir para o estado 68


State 45

   63 Exp: num .

    $default  reduzir usando a regra 63 (Exp)


State 46

   62 Exp: '(' . Exp ')'

    var  fazer shift, e ir para o estado 44
    num  fazer shift, e ir para o estado 45
    '('  fazer shift, e ir para o estado 46

    VarAtr  ir para o estado 47
    Exp     ir para o estado 69


State 47

   64 Exp: VarAtr .
   66    | VarAtr . $@15 '[' Exp ']'

    '['       reduzir usando a regra 65 ($@15)
    $default  reduzir usando a regra 64 (Exp)

    $@15  ir para o estado 70


State 48

   31 Inst: RETURN Exp . ';'
   57 Exp: Exp . '+' Exp
   58    | Exp . '-' Exp
   59    | Exp . '%' Exp
   60    | Exp . '*' Exp
   61    | Exp . '/' Exp

    '+'  fazer shift, e ir para o estado 71
    '-'  fazer shift, e ir para o estado 72
    '*'  fazer shift, e ir para o estado 73
    '/'  fazer shift, e ir para o estado 74
    '%'  fazer shift, e ir para o estado 75
    ';'  fazer shift, e ir para o estado 76


State 49

   38 Printi: PRINTI '(' . Exp ')'

    var  fazer shift, e ir para o estado 44
    num  fazer shift, e ir para o estado 45
    '('  fazer shift, e ir para o estado 46

    VarAtr  ir para o estado 47
    Exp     ir para o estado 77


State 50

   39 Scani: SCANI '(' . VarAtr ')'

    var  fazer shift, e ir para o estado 27

    VarAtr  ir para o estado 78


State 51

   50 DoWhile: DO $@12 . ConjInst WHILE TestExpL

    '{'  fazer shift, e ir para o estado 65

    $default  reduzir usando a regra 22 (ConjInst)

    ConjInst  ir para o estado 79


State 52

    9 ListInst: ListInst Inst .

    $default  reduzir usando a regra 9 (ListInst)


State 53

   35 Atrib: VarAtr '+' . '+'

    '+'  fazer shift, e ir para o estado 80


State 54

   34 Atrib: VarAtr '=' . Exp

    var  fazer shift, e ir para o estado 44
    num  fazer shift, e ir para o estado 45
    '('  fazer shift, e ir para o estado 46

    VarAtr  ir para o estado 47
    Exp     ir para o estado 81


State 55

   37 Atrib: VarAtr $@6 . '[' Exp ']' '=' Exp

    '['  fazer shift, e ir para o estado 82


State 56

   28 Inst: Atrib ';' .

    $default  reduzir usando a regra 28 (Inst)


State 57

   29 Inst: Printi ';' .

    $default  reduzir usando a regra 29 (Inst)


State 58

   30 Inst: Scani ';' .

    $default  reduzir usando a regra 30 (Inst)


State 59

   19 Decla: INT var '[' num ']' ';' .

    $default  reduzir usando a regra 19 (Decla)


State 60

   13 Funcao: '#' Tipo var $@4 . '(' ListaArg ')' $@5 '{' ListaDecla ListInst '}'

    '('  fazer shift, e ir para o estado 83


State 61

   73 TestExpL: '(' . ExpL ')'

    var  fazer shift, e ir para o estado 44
    num  fazer shift, e ir para o estado 45
    '('  fazer shift, e ir para o estado 84

    VarAtr  ir para o estado 47
    Exp     ir para o estado 85
    ExpL    ir para o estado 86


State 62

   48 While: WHILE $@10 TestExpL . $@11 ConjInst

    $default  reduzir usando a regra 47 ($@11)

    $@11  ir para o estado 87


State 63

   55 ForAtrib: Atrib .

    $default  reduzir usando a regra 55 (ForAtrib)


State 64

   54 ForHeader: '(' ForAtrib . ';' $@13 ExpL ';' $@14 ForAtrib ')'

    ';'  fazer shift, e ir para o estado 88


State 65

   23 ConjInst: '{' . ListInst '}'

    WHILE   fazer shift, e ir para o estado 19
    FOR     fazer shift, e ir para o estado 20
    IF      fazer shift, e ir para o estado 21
    ELSE    fazer shift, e ir para o estado 22
    RETURN  fazer shift, e ir para o estado 23
    PRINTI  fazer shift, e ir para o estado 24
    SCANI   fazer shift, e ir para o estado 25
    DO      fazer shift, e ir para o estado 26
    var     fazer shift, e ir para o estado 27

    ListInst  ir para o estado 89
    Inst      ir para o estado 29
    VarAtr    ir para o estado 30
    Atrib     ir para o estado 31
    Printi    ir para o estado 32
    Scani     ir para o estado 33
    If        ir para o estado 34
    While     ir para o estado 35
    DoWhile   ir para o estado 36
    For       ir para o estado 37


State 66

   51 For: FOR ForHeader ConjInst .

    $default  reduzir usando a regra 51 (For)


State 67

   43 If: IF $@7 TestExpL . $@8 ConjInst $@9 Else

    $default  reduzir usando a regra 41 ($@8)

    $@8  ir para o estado 90


State 68

   68 Exp: var $@16 . '(' FunArgs ')'

    '('  fazer shift, e ir para o estado 91


State 69

   57 Exp: Exp . '+' Exp
   58    | Exp . '-' Exp
   59    | Exp . '%' Exp
   60    | Exp . '*' Exp
   61    | Exp . '/' Exp
   62    | '(' Exp . ')'

    '+'  fazer shift, e ir para o estado 71
    '-'  fazer shift, e ir para o estado 72
    '*'  fazer shift, e ir para o estado 73
    '/'  fazer shift, e ir para o estado 74
    '%'  fazer shift, e ir para o estado 75
    ')'  fazer shift, e ir para o estado 92


State 70

   66 Exp: VarAtr $@15 . '[' Exp ']'

    '['  fazer shift, e ir para o estado 93


State 71

   57 Exp: Exp '+' . Exp

    var  fazer shift, e ir para o estado 44
    num  fazer shift, e ir para o estado 45
    '('  fazer shift, e ir para o estado 46

    VarAtr  ir para o estado 47
    Exp     ir para o estado 94


State 72

   58 Exp: Exp '-' . Exp

    var  fazer shift, e ir para o estado 44
    num  fazer shift, e ir para o estado 45
    '('  fazer shift, e ir para o estado 46

    VarAtr  ir para o estado 47
    Exp     ir para o estado 95


State 73

   60 Exp: Exp '*' . Exp

    var  fazer shift, e ir para o estado 44
    num  fazer shift, e ir para o estado 45
    '('  fazer shift, e ir para o estado 46

    VarAtr  ir para o estado 47
    Exp     ir para o estado 96


State 74

   61 Exp: Exp '/' . Exp

    var  fazer shift, e ir para o estado 44
    num  fazer shift, e ir para o estado 45
    '('  fazer shift, e ir para o estado 46

    VarAtr  ir para o estado 47
    Exp     ir para o estado 97


State 75

   59 Exp: Exp '%' . Exp

    var  fazer shift, e ir para o estado 44
    num  fazer shift, e ir para o estado 45
    '('  fazer shift, e ir para o estado 46

    VarAtr  ir para o estado 47
    Exp     ir para o estado 98


State 76

   31 Inst: RETURN Exp ';' .

    $default  reduzir usando a regra 31 (Inst)


State 77

   38 Printi: PRINTI '(' Exp . ')'
   57 Exp: Exp . '+' Exp
   58    | Exp . '-' Exp
   59    | Exp . '%' Exp
   60    | Exp . '*' Exp
   61    | Exp . '/' Exp

    '+'  fazer shift, e ir para o estado 71
    '-'  fazer shift, e ir para o estado 72
    '*'  fazer shift, e ir para o estado 73
    '/'  fazer shift, e ir para o estado 74
    '%'  fazer shift, e ir para o estado 75
    ')'  fazer shift, e ir para o estado 99


State 78

   39 Scani: SCANI '(' VarAtr . ')'

    ')'  fazer shift, e ir para o estado 100


State 79

   50 DoWhile: DO $@12 ConjInst . WHILE TestExpL

    WHILE  fazer shift, e ir para o estado 101


State 80

   35 Atrib: VarAtr '+' '+' .

    $default  reduzir usando a regra 35 (Atrib)


State 81

   34 Atrib: VarAtr '=' Exp .
   57 Exp: Exp . '+' Exp
   58    | Exp . '-' Exp
   59    | Exp . '%' Exp
   60    | Exp . '*' Exp
   61    | Exp . '/' Exp

    '+'  fazer shift, e ir para o estado 71
    '-'  fazer shift, e ir para o estado 72
    '*'  fazer shift, e ir para o estado 73
    '/'  fazer shift, e ir para o estado 74
    '%'  fazer shift, e ir para o estado 75

    $default  reduzir usando a regra 34 (Atrib)


State 82

   37 Atrib: VarAtr $@6 '[' . Exp ']' '=' Exp

    var  fazer shift, e ir para o estado 44
    num  fazer shift, e ir para o estado 45
    '('  fazer shift, e ir para o estado 46

    VarAtr  ir para o estado 47
    Exp     ir para o estado 102


State 83

   13 Funcao: '#' Tipo var $@4 '(' . ListaArg ')' $@5 '{' ListaDecla ListInst '}'

    INT   fazer shift, e ir para o estado 16
    VOID  fazer shift, e ir para o estado 17

    $default  reduzir usando a regra 14 (ListaArg)

    ListaArg   ir para o estado 103
    ListaArg2  ir para o estado 104
    Tipo       ir para o estado 105


State 84

   62 Exp: '(' . Exp ')'
   81 ExpL: '(' . ExpL ')' $@17 '&' '&' '(' ExpL ')'
   82     | '(' . ExpL ')' '|' '|' '(' ExpL ')'

    var  fazer shift, e ir para o estado 44
    num  fazer shift, e ir para o estado 45
    '('  fazer shift, e ir para o estado 84

    VarAtr  ir para o estado 47
    Exp     ir para o estado 106
    ExpL    ir para o estado 107


State 85

   57 Exp: Exp . '+' Exp
   58    | Exp . '-' Exp
   59    | Exp . '%' Exp
   60    | Exp . '*' Exp
   61    | Exp . '/' Exp
   74 ExpL: Exp . '=' '=' Exp
   75     | Exp . '!' '=' Exp
   76     | Exp . '>' '=' Exp
   77     | Exp . '<' '=' Exp
   78     | Exp . '<' Exp
   79     | Exp . '>' Exp

    '+'  fazer shift, e ir para o estado 71
    '-'  fazer shift, e ir para o estado 72
    '*'  fazer shift, e ir para o estado 73
    '/'  fazer shift, e ir para o estado 74
    '%'  fazer shift, e ir para o estado 75
    '='  fazer shift, e ir para o estado 108
    '!'  fazer shift, e ir para o estado 109
    '>'  fazer shift, e ir para o estado 110
    '<'  fazer shift, e ir para o estado 111


State 86

   73 TestExpL: '(' ExpL . ')'

    ')'  fazer shift, e ir para o estado 112


State 87

   48 While: WHILE $@10 TestExpL $@11 . ConjInst

    '{'  fazer shift, e ir para o estado 65

    $default  reduzir usando a regra 22 (ConjInst)

    ConjInst  ir para o estado 113


State 88

   54 ForHeader: '(' ForAtrib ';' . $@13 ExpL ';' $@14 ForAtrib ')'

    $default  reduzir usando a regra 52 ($@13)

    $@13  ir para o estado 114


State 89

    9 ListInst: ListInst . Inst
   23 ConjInst: '{' ListInst . '}'

    WHILE   fazer shift, e ir para o estado 19
    FOR     fazer shift, e ir para o estado 20
    IF      fazer shift, e ir para o estado 21
    ELSE    fazer shift, e ir para o estado 22
    RETURN  fazer shift, e ir para o estado 23
    PRINTI  fazer shift, e ir para o estado 24
    SCANI   fazer shift, e ir para o estado 25
    DO      fazer shift, e ir para o estado 26
    var     fazer shift, e ir para o estado 27
    '}'     fazer shift, e ir para o estado 115

    Inst     ir para o estado 52
    VarAtr   ir para o estado 30
    Atrib    ir para o estado 31
    Printi   ir para o estado 32
    Scani    ir para o estado 33
    If       ir para o estado 34
    While    ir para o estado 35
    DoWhile  ir para o estado 36
    For      ir para o estado 37


State 90

   43 If: IF $@7 TestExpL $@8 . ConjInst $@9 Else

    '{'  fazer shift, e ir para o estado 65

    $default  reduzir usando a regra 22 (ConjInst)

    ConjInst  ir para o estado 116


State 91

   68 Exp: var $@16 '(' . FunArgs ')'

    var  fazer shift, e ir para o estado 44
    num  fazer shift, e ir para o estado 45
    '('  fazer shift, e ir para o estado 46

    $default  reduzir usando a regra 69 (FunArgs)

    VarAtr    ir para o estado 47
    Exp       ir para o estado 117
    FunArgs   ir para o estado 118
    FunArgs2  ir para o estado 119


State 92

   62 Exp: '(' Exp ')' .

    $default  reduzir usando a regra 62 (Exp)


State 93

   66 Exp: VarAtr $@15 '[' . Exp ']'

    var  fazer shift, e ir para o estado 44
    num  fazer shift, e ir para o estado 45
    '('  fazer shift, e ir para o estado 46

    VarAtr  ir para o estado 47
    Exp     ir para o estado 120


State 94

   57 Exp: Exp . '+' Exp
   57    | Exp '+' Exp .
   58    | Exp . '-' Exp
   59    | Exp . '%' Exp
   60    | Exp . '*' Exp
   61    | Exp . '/' Exp

    '*'  fazer shift, e ir para o estado 73
    '/'  fazer shift, e ir para o estado 74
    '%'  fazer shift, e ir para o estado 75

    $default  reduzir usando a regra 57 (Exp)


State 95

   57 Exp: Exp . '+' Exp
   58    | Exp . '-' Exp
   58    | Exp '-' Exp .
   59    | Exp . '%' Exp
   60    | Exp . '*' Exp
   61    | Exp . '/' Exp

    '*'  fazer shift, e ir para o estado 73
    '/'  fazer shift, e ir para o estado 74
    '%'  fazer shift, e ir para o estado 75

    $default  reduzir usando a regra 58 (Exp)


State 96

   57 Exp: Exp . '+' Exp
   58    | Exp . '-' Exp
   59    | Exp . '%' Exp
   60    | Exp . '*' Exp
   60    | Exp '*' Exp .
   61    | Exp . '/' Exp

    $default  reduzir usando a regra 60 (Exp)


State 97

   57 Exp: Exp . '+' Exp
   58    | Exp . '-' Exp
   59    | Exp . '%' Exp
   60    | Exp . '*' Exp
   61    | Exp . '/' Exp
   61    | Exp '/' Exp .

    $default  reduzir usando a regra 61 (Exp)


State 98

   57 Exp: Exp . '+' Exp
   58    | Exp . '-' Exp
   59    | Exp . '%' Exp
   59    | Exp '%' Exp .
   60    | Exp . '*' Exp
   61    | Exp . '/' Exp

    $default  reduzir usando a regra 59 (Exp)


State 99

   38 Printi: PRINTI '(' Exp ')' .

    $default  reduzir usando a regra 38 (Printi)


State 100

   39 Scani: SCANI '(' VarAtr ')' .

    $default  reduzir usando a regra 39 (Scani)


State 101

   50 DoWhile: DO $@12 ConjInst WHILE . TestExpL

    '('  fazer shift, e ir para o estado 61

    TestExpL  ir para o estado 121


State 102

   37 Atrib: VarAtr $@6 '[' Exp . ']' '=' Exp
   57 Exp: Exp . '+' Exp
   58    | Exp . '-' Exp
   59    | Exp . '%' Exp
   60    | Exp . '*' Exp
   61    | Exp . '/' Exp

    '+'  fazer shift, e ir para o estado 71
    '-'  fazer shift, e ir para o estado 72
    '*'  fazer shift, e ir para o estado 73
    '/'  fazer shift, e ir para o estado 74
    '%'  fazer shift, e ir para o estado 75
    ']'  fazer shift, e ir para o estado 122


State 103

   13 Funcao: '#' Tipo var $@4 '(' ListaArg . ')' $@5 '{' ListaDecla ListInst '}'

    ')'  fazer shift, e ir para o estado 123


State 104

   15 ListaArg: ListaArg2 .
   17 ListaArg2: ListaArg2 . ',' Tipo var

    ','  fazer shift, e ir para o estado 124

    $default  reduzir usando a regra 15 (ListaArg)


State 105

   16 ListaArg2: Tipo . var

    var  fazer shift, e ir para o estado 125


State 106

   57 Exp: Exp . '+' Exp
   58    | Exp . '-' Exp
   59    | Exp . '%' Exp
   60    | Exp . '*' Exp
   61    | Exp . '/' Exp
   62    | '(' Exp . ')'
   74 ExpL: Exp . '=' '=' Exp
   75     | Exp . '!' '=' Exp
   76     | Exp . '>' '=' Exp
   77     | Exp . '<' '=' Exp
   78     | Exp . '<' Exp
   79     | Exp . '>' Exp

    '+'  fazer shift, e ir para o estado 71
    '-'  fazer shift, e ir para o estado 72
    '*'  fazer shift, e ir para o estado 73
    '/'  fazer shift, e ir para o estado 74
    '%'  fazer shift, e ir para o estado 75
    ')'  fazer shift, e ir para o estado 92
    '='  fazer shift, e ir para o estado 108
    '!'  fazer shift, e ir para o estado 109
    '>'  fazer shift, e ir para o estado 110
    '<'  fazer shift, e ir para o estado 111


State 107

   81 ExpL: '(' ExpL . ')' $@17 '&' '&' '(' ExpL ')'
   82     | '(' ExpL . ')' '|' '|' '(' ExpL ')'

    ')'  fazer shift, e ir para o estado 126


State 108

   74 ExpL: Exp '=' . '=' Exp

    '='  fazer shift, e ir para o estado 127


State 109

   75 ExpL: Exp '!' . '=' Exp

    '='  fazer shift, e ir para o estado 128


State 110

   76 ExpL: Exp '>' . '=' Exp
   79     | Exp '>' . Exp

    var  fazer shift, e ir para o estado 44
    num  fazer shift, e ir para o estado 45
    '('  fazer shift, e ir para o estado 46
    '='  fazer shift, e ir para o estado 129

    VarAtr  ir para o estado 47
    Exp     ir para o estado 130


State 111

   77 ExpL: Exp '<' . '=' Exp
   78     | Exp '<' . Exp

    var  fazer shift, e ir para o estado 44
    num  fazer shift, e ir para o estado 45
    '('  fazer shift, e ir para o estado 46
    '='  fazer shift, e ir para o estado 131

    VarAtr  ir para o estado 47
    Exp     ir para o estado 132


State 112

   73 TestExpL: '(' ExpL ')' .

    $default  reduzir usando a regra 73 (TestExpL)


State 113

   48 While: WHILE $@10 TestExpL $@11 ConjInst .

    $default  reduzir usando a regra 48 (While)


State 114

   54 ForHeader: '(' ForAtrib ';' $@13 . ExpL ';' $@14 ForAtrib ')'

    var  fazer shift, e ir para o estado 44
    num  fazer shift, e ir para o estado 45
    '('  fazer shift, e ir para o estado 84

    VarAtr  ir para o estado 47
    Exp     ir para o estado 85
    ExpL    ir para o estado 133


State 115

   23 ConjInst: '{' ListInst '}' .

    $default  reduzir usando a regra 23 (ConjInst)


State 116

   43 If: IF $@7 TestExpL $@8 ConjInst . $@9 Else

    $default  reduzir usando a regra 42 ($@9)

    $@9  ir para o estado 134


State 117

   57 Exp: Exp . '+' Exp
   58    | Exp . '-' Exp
   59    | Exp . '%' Exp
   60    | Exp . '*' Exp
   61    | Exp . '/' Exp
   71 FunArgs2: Exp .

    '+'  fazer shift, e ir para o estado 71
    '-'  fazer shift, e ir para o estado 72
    '*'  fazer shift, e ir para o estado 73
    '/'  fazer shift, e ir para o estado 74
    '%'  fazer shift, e ir para o estado 75

    $default  reduzir usando a regra 71 (FunArgs2)


State 118

   68 Exp: var $@16 '(' FunArgs . ')'

    ')'  fazer shift, e ir para o estado 135


State 119

   70 FunArgs: FunArgs2 .
   72 FunArgs2: FunArgs2 . ',' Exp

    ','  fazer shift, e ir para o estado 136

    $default  reduzir usando a regra 70 (FunArgs)


State 120

   57 Exp: Exp . '+' Exp
   58    | Exp . '-' Exp
   59    | Exp . '%' Exp
   60    | Exp . '*' Exp
   61    | Exp . '/' Exp
   66    | VarAtr $@15 '[' Exp . ']'

    '+'  fazer shift, e ir para o estado 71
    '-'  fazer shift, e ir para o estado 72
    '*'  fazer shift, e ir para o estado 73
    '/'  fazer shift, e ir para o estado 74
    '%'  fazer shift, e ir para o estado 75
    ']'  fazer shift, e ir para o estado 137


State 121

   50 DoWhile: DO $@12 ConjInst WHILE TestExpL .

    $default  reduzir usando a regra 50 (DoWhile)


State 122

   37 Atrib: VarAtr $@6 '[' Exp ']' . '=' Exp

    '='  fazer shift, e ir para o estado 138


State 123

   13 Funcao: '#' Tipo var $@4 '(' ListaArg ')' . $@5 '{' ListaDecla ListInst '}'

    $default  reduzir usando a regra 12 ($@5)

    $@5  ir para o estado 139


State 124

   17 ListaArg2: ListaArg2 ',' . Tipo var

    INT   fazer shift, e ir para o estado 16
    VOID  fazer shift, e ir para o estado 17

    Tipo  ir para o estado 140


State 125

   16 ListaArg2: Tipo var .

    $default  reduzir usando a regra 16 (ListaArg2)


State 126

   81 ExpL: '(' ExpL ')' . $@17 '&' '&' '(' ExpL ')'
   82     | '(' ExpL ')' . '|' '|' '(' ExpL ')'

    '|'  fazer shift, e ir para o estado 141

    $default  reduzir usando a regra 80 ($@17)

    $@17  ir para o estado 142


State 127

   74 ExpL: Exp '=' '=' . Exp

    var  fazer shift, e ir para o estado 44
    num  fazer shift, e ir para o estado 45
    '('  fazer shift, e ir para o estado 46

    VarAtr  ir para o estado 47
    Exp     ir para o estado 143


State 128

   75 ExpL: Exp '!' '=' . Exp

    var  fazer shift, e ir para o estado 44
    num  fazer shift, e ir para o estado 45
    '('  fazer shift, e ir para o estado 46

    VarAtr  ir para o estado 47
    Exp     ir para o estado 144


State 129

   76 ExpL: Exp '>' '=' . Exp

    var  fazer shift, e ir para o estado 44
    num  fazer shift, e ir para o estado 45
    '('  fazer shift, e ir para o estado 46

    VarAtr  ir para o estado 47
    Exp     ir para o estado 145


State 130

   57 Exp: Exp . '+' Exp
   58    | Exp . '-' Exp
   59    | Exp . '%' Exp
   60    | Exp . '*' Exp
   61    | Exp . '/' Exp
   79 ExpL: Exp '>' Exp .

    '+'  fazer shift, e ir para o estado 71
    '-'  fazer shift, e ir para o estado 72
    '*'  fazer shift, e ir para o estado 73
    '/'  fazer shift, e ir para o estado 74
    '%'  fazer shift, e ir para o estado 75

    $default  reduzir usando a regra 79 (ExpL)


State 131

   77 ExpL: Exp '<' '=' . Exp

    var  fazer shift, e ir para o estado 44
    num  fazer shift, e ir para o estado 45
    '('  fazer shift, e ir para o estado 46

    VarAtr  ir para o estado 47
    Exp     ir para o estado 146


State 132

   57 Exp: Exp . '+' Exp
   58    | Exp . '-' Exp
   59    | Exp . '%' Exp
   60    | Exp . '*' Exp
   61    | Exp . '/' Exp
   78 ExpL: Exp '<' Exp .

    '+'  fazer shift, e ir para o estado 71
    '-'  fazer shift, e ir para o estado 72
    '*'  fazer shift, e ir para o estado 73
    '/'  fazer shift, e ir para o estado 74
    '%'  fazer shift, e ir para o estado 75

    $default  reduzir usando a regra 78 (ExpL)


State 133

   54 ForHeader: '(' ForAtrib ';' $@13 ExpL . ';' $@14 ForAtrib ')'

    ';'  fazer shift, e ir para o estado 147


State 134

   43 If: IF $@7 TestExpL $@8 ConjInst $@9 . Else

    ELSE  fazer shift, e ir para o estado 148

    ELSE      [reduzir usando a regra 44 (Else)]
    $default  reduzir usando a regra 44 (Else)

    Else  ir para o estado 149


State 135

   68 Exp: var $@16 '(' FunArgs ')' .

    $default  reduzir usando a regra 68 (Exp)


State 136

   72 FunArgs2: FunArgs2 ',' . Exp

    var  fazer shift, e ir para o estado 44
    num  fazer shift, e ir para o estado 45
    '('  fazer shift, e ir para o estado 46

    VarAtr  ir para o estado 47
    Exp     ir para o estado 150


State 137

   66 Exp: VarAtr $@15 '[' Exp ']' .

    $default  reduzir usando a regra 66 (Exp)


State 138

   37 Atrib: VarAtr $@6 '[' Exp ']' '=' . Exp

    var  fazer shift, e ir para o estado 44
    num  fazer shift, e ir para o estado 45
    '('  fazer shift, e ir para o estado 46

    VarAtr  ir para o estado 47
    Exp     ir para o estado 151


State 139

   13 Funcao: '#' Tipo var $@4 '(' ListaArg ')' $@5 . '{' ListaDecla ListInst '}'

    '{'  fazer shift, e ir para o estado 152


State 140

   17 ListaArg2: ListaArg2 ',' Tipo . var

    var  fazer shift, e ir para o estado 153


State 141

   82 ExpL: '(' ExpL ')' '|' . '|' '(' ExpL ')'

    '|'  fazer shift, e ir para o estado 154


State 142

   81 ExpL: '(' ExpL ')' $@17 . '&' '&' '(' ExpL ')'

    '&'  fazer shift, e ir para o estado 155


State 143

   57 Exp: Exp . '+' Exp
   58    | Exp . '-' Exp
   59    | Exp . '%' Exp
   60    | Exp . '*' Exp
   61    | Exp . '/' Exp
   74 ExpL: Exp '=' '=' Exp .

    '+'  fazer shift, e ir para o estado 71
    '-'  fazer shift, e ir para o estado 72
    '*'  fazer shift, e ir para o estado 73
    '/'  fazer shift, e ir para o estado 74
    '%'  fazer shift, e ir para o estado 75

    $default  reduzir usando a regra 74 (ExpL)


State 144

   57 Exp: Exp . '+' Exp
   58    | Exp . '-' Exp
   59    | Exp . '%' Exp
   60    | Exp . '*' Exp
   61    | Exp . '/' Exp
   75 ExpL: Exp '!' '=' Exp .

    '+'  fazer shift, e ir para o estado 71
    '-'  fazer shift, e ir para o estado 72
    '*'  fazer shift, e ir para o estado 73
    '/'  fazer shift, e ir para o estado 74
    '%'  fazer shift, e ir para o estado 75

    $default  reduzir usando a regra 75 (ExpL)


State 145

   57 Exp: Exp . '+' Exp
   58    | Exp . '-' Exp
   59    | Exp . '%' Exp
   60    | Exp . '*' Exp
   61    | Exp . '/' Exp
   76 ExpL: Exp '>' '=' Exp .

    '+'  fazer shift, e ir para o estado 71
    '-'  fazer shift, e ir para o estado 72
    '*'  fazer shift, e ir para o estado 73
    '/'  fazer shift, e ir para o estado 74
    '%'  fazer shift, e ir para o estado 75

    $default  reduzir usando a regra 76 (ExpL)


State 146

   57 Exp: Exp . '+' Exp
   58    | Exp . '-' Exp
   59    | Exp . '%' Exp
   60    | Exp . '*' Exp
   61    | Exp . '/' Exp
   77 ExpL: Exp '<' '=' Exp .

    '+'  fazer shift, e ir para o estado 71
    '-'  fazer shift, e ir para o estado 72
    '*'  fazer shift, e ir para o estado 73
    '/'  fazer shift, e ir para o estado 74
    '%'  fazer shift, e ir para o estado 75

    $default  reduzir usando a regra 77 (ExpL)


State 147

   54 ForHeader: '(' ForAtrib ';' $@13 ExpL ';' . $@14 ForAtrib ')'

    $default  reduzir usando a regra 53 ($@14)

    $@14  ir para o estado 156


State 148

   45 Else: ELSE . ConjInst

    '{'  fazer shift, e ir para o estado 65

    $default  reduzir usando a regra 22 (ConjInst)

    ConjInst  ir para o estado 157


State 149

   43 If: IF $@7 TestExpL $@8 ConjInst $@9 Else .

    $default  reduzir usando a regra 43 (If)


State 150

   57 Exp: Exp . '+' Exp
   58    | Exp . '-' Exp
   59    | Exp . '%' Exp
   60    | Exp . '*' Exp
   61    | Exp . '/' Exp
   72 FunArgs2: FunArgs2 ',' Exp .

    '+'  fazer shift, e ir para o estado 71
    '-'  fazer shift, e ir para o estado 72
    '*'  fazer shift, e ir para o estado 73
    '/'  fazer shift, e ir para o estado 74
    '%'  fazer shift, e ir para o estado 75

    $default  reduzir usando a regra 72 (FunArgs2)


State 151

   37 Atrib: VarAtr $@6 '[' Exp ']' '=' Exp .
   57 Exp: Exp . '+' Exp
   58    | Exp . '-' Exp
   59    | Exp . '%' Exp
   60    | Exp . '*' Exp
   61    | Exp . '/' Exp

    '+'  fazer shift, e ir para o estado 71
    '-'  fazer shift, e ir para o estado 72
    '*'  fazer shift, e ir para o estado 73
    '/'  fazer shift, e ir para o estado 74
    '%'  fazer shift, e ir para o estado 75

    $default  reduzir usando a regra 37 (Atrib)


State 152

   13 Funcao: '#' Tipo var $@4 '(' ListaArg ')' $@5 '{' . ListaDecla ListInst '}'

    $default  reduzir usando a regra 8 (ListaDecla)

    ListaDecla  ir para o estado 158


State 153

   17 ListaArg2: ListaArg2 ',' Tipo var .

    $default  reduzir usando a regra 17 (ListaArg2)


State 154

   82 ExpL: '(' ExpL ')' '|' '|' . '(' ExpL ')'

    '('  fazer shift, e ir para o estado 159


State 155

   81 ExpL: '(' ExpL ')' $@17 '&' . '&' '(' ExpL ')'

    '&'  fazer shift, e ir para o estado 160


State 156

   54 ForHeader: '(' ForAtrib ';' $@13 ExpL ';' $@14 . ForAtrib ')'

    var  fazer shift, e ir para o estado 27

    $default  reduzir usando a regra 56 (ForAtrib)

    VarAtr    ir para o estado 30
    Atrib     ir para o estado 63
    ForAtrib  ir para o estado 161


State 157

   45 Else: ELSE ConjInst .

    $default  reduzir usando a regra 45 (Else)


State 158

    7 ListaDecla: ListaDecla . Decla
   13 Funcao: '#' Tipo var $@4 '(' ListaArg ')' $@5 '{' ListaDecla . ListInst '}'

    INT     fazer shift, e ir para o estado 5
    WHILE   fazer shift, e ir para o estado 19
    FOR     fazer shift, e ir para o estado 20
    IF      fazer shift, e ir para o estado 21
    ELSE    fazer shift, e ir para o estado 22
    RETURN  fazer shift, e ir para o estado 23
    PRINTI  fazer shift, e ir para o estado 24
    SCANI   fazer shift, e ir para o estado 25
    DO      fazer shift, e ir para o estado 26
    var     fazer shift, e ir para o estado 27

    ListInst  ir para o estado 162
    Decla     ir para o estado 7
    Inst      ir para o estado 29
    VarAtr    ir para o estado 30
    Atrib     ir para o estado 31
    Printi    ir para o estado 32
    Scani     ir para o estado 33
    If        ir para o estado 34
    While     ir para o estado 35
    DoWhile   ir para o estado 36
    For       ir para o estado 37


State 159

   82 ExpL: '(' ExpL ')' '|' '|' '(' . ExpL ')'

    var  fazer shift, e ir para o estado 44
    num  fazer shift, e ir para o estado 45
    '('  fazer shift, e ir para o estado 84

    VarAtr  ir para o estado 47
    Exp     ir para o estado 85
    ExpL    ir para o estado 163


State 160

   81 ExpL: '(' ExpL ')' $@17 '&' '&' . '(' ExpL ')'

    '('  fazer shift, e ir para o estado 164


State 161

   54 ForHeader: '(' ForAtrib ';' $@13 ExpL ';' $@14 ForAtrib . ')'

    ')'  fazer shift, e ir para o estado 165


State 162

    9 ListInst: ListInst . Inst
   13 Funcao: '#' Tipo var $@4 '(' ListaArg ')' $@5 '{' ListaDecla ListInst . '}'

    WHILE   fazer shift, e ir para o estado 19
    FOR     fazer shift, e ir para o estado 20
    IF      fazer shift, e ir para o estado 21
    ELSE    fazer shift, e ir para o estado 22
    RETURN  fazer shift, e ir para o estado 23
    PRINTI  fazer shift, e ir para o estado 24
    SCANI   fazer shift, e ir para o estado 25
    DO      fazer shift, e ir para o estado 26
    var     fazer shift, e ir para o estado 27
    '}'     fazer shift, e ir para o estado 166

    Inst     ir para o estado 52
    VarAtr   ir para o estado 30
    Atrib    ir para o estado 31
    Printi   ir para o estado 32
    Scani    ir para o estado 33
    If       ir para o estado 34
    While    ir para o estado 35
    DoWhile  ir para o estado 36
    For      ir para o estado 37


State 163

   82 ExpL: '(' ExpL ')' '|' '|' '(' ExpL . ')'

    ')'  fazer shift, e ir para o estado 167


State 164

   81 ExpL: '(' ExpL ')' $@17 '&' '&' '(' . ExpL ')'

    var  fazer shift, e ir para o estado 44
    num  fazer shift, e ir para o estado 45
    '('  fazer shift, e ir para o estado 84

    VarAtr  ir para o estado 47
    Exp     ir para o estado 85
    ExpL    ir para o estado 168


State 165

   54 ForHeader: '(' ForAtrib ';' $@13 ExpL ';' $@14 ForAtrib ')' .

    $default  reduzir usando a regra 54 (ForHeader)


State 166

   13 Funcao: '#' Tipo var $@4 '(' ListaArg ')' $@5 '{' ListaDecla ListInst '}' .

    $default  reduzir usando a regra 13 (Funcao)


State 167

   82 ExpL: '(' ExpL ')' '|' '|' '(' ExpL ')' .

    $default  reduzir usando a regra 82 (ExpL)


State 168

   81 ExpL: '(' ExpL ')' $@17 '&' '&' '(' ExpL . ')'

    ')'  fazer shift, e ir para o estado 169


State 169

   81 ExpL: '(' ExpL ')' $@17 '&' '&' '(' ExpL ')' .

    $default  reduzir usando a regra 81 (ExpL)
